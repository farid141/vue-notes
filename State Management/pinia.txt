#instalasi
npm install pinia

// ./src/main.js
import {createPinia} from "pinia"

createApp(App).use(pinia).mount('#app');

// ./src/store.js
import {defineStore} from "pinia";
import {ref} from "vue"

export const useCounter = defineStore("counter", ()=>{
	// state
	const counter = ref(0);

	// action
	function increment(){
		counter.value++
	}
	
	return {
		counter,
		increment
	}
})

// komponen ./src/component/xx.js
import {useCounter} from "../store.js"

const counter = useCounter();

function handleReset(){
	counter.$patch({
		counter:0
	})
}

// menggunakan state dan method:
counter.counter
counter.increment()

# counter.$subscribe((mutation, state)=>{})
hanya akan dipanggil ketika perubahan state melalui .$patch()

# $onAction()

# kita juga dapat menuliskan getter (computed properties)
this.asd=computed(()=>this.counter+this.name)

# menggunakan pinia dan API calls, langsung buat saja fungsi async dalam store
async fetchUsers() {
        try {
          const data = await axios.get('https://jsonplaceholder.typicode.com/users')
            this.users = data.data
          }
          catch (error) {
            alert(error)
            console.log(error)
        }